{"version":3,"sources":["reducers/notificationReducer.js","components/Notification.js","services/tags.js","components/Loading.js","components/ImageLoader.js","components/ScoopedBoxFrame.js","components/Profiles.js","reducers/userReducer.js","reducers/loginReducer.js","services/profiles.js","components/Profile.js","components/News.js","components/Authentication.js","components/Sidebar.js","services/login.js","components/LoginForm.js","components/ImageUpload.js","components/UserTypeForm.js","components/UserInfoForm.js","components/UserLocationForm.js","components/UserProfileInfoForm.js","components/RegisterationForm.js","reducers/profilesReducer.js","services/news.js","reducers/newsReducer.js","App.js","store.js","index.js","resources/logo.png","resources/artist_bg.jpg","resources/studio_bg.jpg","resources/form_bg.jpg"],"names":["notificationChange","notification","type","setNotification","time","arguments","length","undefined","_ref","Object","asyncToGenerator","regenerator_default","a","mark","_callee","dispatch","wrap","_context","prev","next","setTimeout","stop","_x","apply","this","notificationReducer","state","action","ConnectedNotification","connect","props","react_default","createElement","className","onClick","Alert","variant","services_tags","getAll","response","axios","get","sent","abrupt","data","Loading","color","style","display","justifyContent","react_loading_default","height","width","ImageLoader","imgUrl","child","_useState","useState","_useState2","slicedToArray","loaded","setLoaded","paddingTop","components_Loading","LazyLoad_default","Image","src","onLoad","fluid","ScoopedBoxFrame","id","children","textContent","clickEvent","radius","_ref$type","_ref$primaryColor","primaryColor","_ref$borderColor","borderColor","_ref$textColor","textColor","uid","map","i","fill","r","href","x","y","mask","concat","cy","Profiles","profiles","filters","tags","setTags","_useState3","_useState4","suggestions","setSuggestions","useEffect","getSuggestionsFromServer","_ref2","suggestionList","f","tagService","s","index","name","forEach","filter","push","ReactTags_default","handleDelete","newTags","slice","splice","bind","handleAddition","tag","autofocus","placeholder","scores","p","profile","score","likes","city","country","username","indexOf","sort","b","obj","filteredProfiles","key","components_ScoopedBoxFrame","images","components_ImageLoader","Link","to","userChange","user","userReducer","setShowLogin","value","showLogin","loginReducer","token","services_profiles","getOne","_callee2","_context2","update","_ref3","_callee3","newObject","config","_context3","headers","Authorization","put","_x2","like","_ref4","_callee4","_context4","_x3","create","_ref5","_callee5","_context5","post","_x4","setToken","newToken","ConnectedProfile","userLikedProfile","setUserLikedProfile","setLikes","fetchProfile","profileService","includes","window","scrollTo","handleLikeButtonClick","Carousel","interval","divStyle","minHeight","image","Item","alt","mapProfileImages","Button","description","address","postalCode","useLastLocation","News","news","newsElem","altText","title","link","Collapsible_default","trigger","overflowWhenOpen","ConnectedAuthentication","loggedUserJSON","localStorage","getItem","JSON","parse","removeItem","isMenuOpen","setIsMenuOpen","closeMenu","BurgerMenu","isOpen","onStateChange","handleStateChange","components_Authentication","react_headroom_dist_default","logo","location","pathname","withRouter","services_login","login","credentials","ConnectedLoginForm","setUsername","password","setPassword","handleLogin","event","preventDefault","loginService","console","log","setItem","stringify","t0","cancelLogin","Form","onSubmit","Group","Label","Control","onChange","target","history","registerPlugin","FilePondPluginImagePreview","FilePondPluginFileValidateType","FilePondPluginImageCrop","FilePondPluginImageResize","ImageUpload","pond","handleSubmit","files","processFiles","addPictures","file","serverId","react_filepond","ref","allowMultiple","acceptedFileTypes","allowImageCrop","imageCropAspectRatio","allowImageResize","imageResizeTargetWidth","imageResizeTargetHeight","imageResizeUpscale","instantUpload","labelIdle","server","TypeForm","setType","artistBG","studioBG","validateType","UserInfoForm","backgroundDiv","FormControl","defaultValue","setName","email","setEmail","validateUserInfo","setPrevState","locationForm","setAddress","postalcode","setPostalcode","setCity","setCountry","validateLocation","profileInfoForm","addOnBlur","allowNew","addProfile","as","rows","setDescription","ConnectedRegisterationForm","setState","states","_useState5","_useState6","_useState7","_useState8","_useState9","_useState10","_useState11","_useState12","_useState13","_useState14","_useState15","_useState16","_useState17","_useState18","_useState19","_useState20","_useState21","_useState22","pictures","setPictures","_useState23","_useState24","_useState25","_useState26","_useState27","_useState28","previousUrl","_useState29","_useState30","registerationDone","setRegisterationDone","clampState","val","setNextState","tagList","profileObject","newProfile","backgroundImage","formBG","backgroundPosition","backgroundSize","backgroundRepeat","newPictures","UserTypeForm","components_UserInfoForm","UserLocationForm","components_ImageUpload","UserProfileInfoForm","input","t","split","Redirect","profilesReducer","services_news","newsReducer","initializeProfiles","initializeNews","newsService","BrowserRouter","components_LoginForm","components_Sidebar","pageWrapId","outerContainerId","dist","components_Notification","Route","exact","path","render","components_News","components_Profiles","match","params","components_Profile","find","prof","components_RegisterationForm","reducer","combineReducers","store","createStore","composeWithDevTools","applyMiddleware","thunk","ReactDOM","es","src_App","document","getElementById","module","exports","__webpack_require__"],"mappings":"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","file":"static/js/main.a0ea7350.chunk.js","sourcesContent":["\r\nconst initialState = ''\r\n\r\nconst notificationReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n  case 'SET_NOTIFICATION':\r\n    return action.notification\r\n  case 'CLEAR':\r\n    return ''\r\n  default:\r\n    return state\r\n  }\r\n}\r\n\r\nexport const clearNotification = () => {\r\n  return {\r\n    type: 'CLEAR',\r\n  }\r\n}\r\n\r\nexport const notificationChange = notification => {\r\n  return {\r\n    type: 'SET_NOTIFICATION',\r\n    notification: notification,\r\n  }\r\n}\r\n\r\nexport const setNotification = (notification, time = 3) => {\r\n  return async dispatch => {\r\n    dispatch(notificationChange(notification))\r\n    setTimeout(() => {dispatch(clearNotification())}, time * 1000)\r\n  }\r\n}\r\n\r\nexport default notificationReducer","import React from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { Alert } from 'react-bootstrap'\r\n\r\nimport { setNotification } from '../reducers/notificationReducer'\r\n\r\nimport '../styles/Notification.css'\r\n\r\nconst Notification = (props) => {\r\n  if (!props.notification) return null\r\n\r\n  return (\r\n    <div className=\"notification-container\" onClick={ () => props.setNotification(null)}>\r\n      <Alert variant=\"success\" className=\"notification-content\">\r\n        {props.notification}\r\n      </Alert>\r\n    </div>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    notification: state.notification,\r\n  }\r\n}\r\n\r\nconst ConnectedNotification = connect(mapStateToProps,\r\n  { setNotification }\r\n)(Notification)\r\n\r\nexport default ConnectedNotification\r\n","import axios from 'axios'\r\nconst baseUrl = '/api/tags'\r\n\r\nconst getAll = async () => {\r\n  const response = await axios.get(baseUrl)\r\n  return response.data\r\n}\r\n\r\nexport default { getAll }","import React from 'react'\r\nimport ReactLoading from 'react-loading'\r\n\r\nconst Loading = ({ type, color }) => (\r\n  <div style={{ display: 'flex', justifyContent: 'center' }}>\r\n    <ReactLoading type={type} color={color} height={'20%'} width={'20%'} />\r\n  </div>\r\n)\r\n\r\nexport default Loading","import React, { useState } from 'react'\r\nimport LazyLoad from 'react-lazy-load'\r\nimport { Image } from 'react-bootstrap'\r\nimport Loading from './Loading'\r\n\r\n\r\nconst ImageLoader = ({ imgUrl, child }) => {\r\n  const [ loaded, setLoaded ] = useState(false)\r\n\r\n  return (\r\n    <div className=\"img-container\">\r\n      {!loaded &&\r\n            <div className=\"loading-container\" style={{height:\"10em\", paddingTop: \"20%\"}}>\r\n              <Loading color=\"#d1d1d1\" type=\"spin\"/>\r\n            </div>\r\n      }\r\n      <LazyLoad>\r\n        <Image\r\n          src={imgUrl}\r\n          onLoad={() => setLoaded(true)}\r\n          fluid\r\n        />\r\n      </LazyLoad>\r\n      {child && child}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default ImageLoader","import React from 'react'\r\n\r\nconst ScoopedBoxFrame = (\r\n  { \r\n    id,\r\n    children,\r\n    textContent,\r\n    clickEvent,\r\n    radius,\r\n    type = 'box',\r\n    primaryColor = '#375244',\r\n    borderColor = '#ffffff',\r\n    textColor = '#ffffff',\r\n  }) => {\r\n\r\n  //original id's in the order that they are used\r\n  const ids = [\r\n    'm', 'b', 'c', '#c', '#b', '#m',\r\n    'mb', 'bb', 'cb', '#cb', '#bb', '#mb',\r\n    'mc', 'bc', 'cc', '#cc', '#bc', '#mc'\r\n  ]\r\n  //18 total, is there a more elegant solution?\r\n  const uid = ids.map(i => i + id)\r\n\r\n  const renderBox = () => {\r\n    if ( type !== 'box') return null\r\n    return (\r\n          <svg>\r\n            <mask id={uid[0]} fill='#fff'>\r\n              <rect id={uid[1]} width='100%' height='100%' />\r\n              <circle id={uid[2]} r={radius} fill='#000' />\r\n              <use href={uid[3]} x='100%' />\r\n              <use href={uid[3]} y='100%' />\r\n              <use href={uid[3]} x='100%' y='100%' />\r\n            </mask>\r\n            <use href={uid[4]} mask={`url(${uid[5]})`} fill={primaryColor} />\r\n\r\n\r\n            <mask id={uid[6]} fill='#fff'>\r\n              <rect className=\"borderStart\" id={uid[7]} />\r\n              <circle id={uid[8]} r={radius} fill='#000' />\r\n              <use href={uid[9]} x='100%' />\r\n              <use href={uid[9]} y='100%' />\r\n              <use href={uid[9]} x='100%' y='100%' />\r\n            </mask>\r\n            <use href={uid[10]} mask={`url(${uid[11]})`} fill={borderColor} />\r\n\r\n            <mask id={uid[12]} fill='#fff'>\r\n              <rect className=\"borderEnd\" id={uid[13]} />\r\n              <circle id={uid[14]} r={radius + 3} fill='#000' />\r\n              <use href={uid[15]} x='100%' />\r\n              <use href={uid[15]} y='100%' />\r\n              <use href={uid[15]} x='100%' y='100%' />\r\n            </mask>\r\n            <use href={uid[16]} mask={`url(${uid[17]})`} fill={primaryColor} />\r\n            <rect className=\"imagePlaceholder\" y={radius} />\r\n          </svg>\r\n    )\r\n  }\r\n\r\n  const renderTop = () => {\r\n    if ( type !== 'top') return null\r\n    return (\r\n          <svg>\r\n            <mask id={uid[0]} fill='#fff'>\r\n              <rect id={uid[1]} width='100%' height='100%' />\r\n              <circle id={uid[2]} r={radius} fill='#000' />\r\n              <use href={uid[3]} x='100%' />>\r\n            </mask>\r\n            <use href={uid[4]} mask={`url(${uid[5]})`} fill={primaryColor} />\r\n\r\n\r\n            <mask id={uid[6]} fill='#fff'>\r\n              <rect className=\"borderStart\" id={uid[7]} />\r\n              <circle id={uid[8]} r={radius} fill='#000' />\r\n              <use href={uid[9]} x='100%' />\r\n            </mask>\r\n            <use href={uid[10]} mask={`url(${uid[11]})`} fill={borderColor} />\r\n\r\n            <mask id={uid[12]} fill='#fff'>\r\n              <rect className=\"borderEnd\" id={uid[13]} />\r\n              <circle id={uid[14]} r={radius + 3} fill='#000' />\r\n              <use href={uid[15]} x='100%' />\r\n            </mask>\r\n            <use href={uid[16]} mask={`url(${uid[17]})`} fill={primaryColor} />\r\n            <rect className=\"imagePlaceholder\" y={radius} />\r\n          </svg>\r\n    )\r\n  }\r\n\r\n  const renderBottom = () => {\r\n    if ( type !== 'bottom') return null\r\n    return (\r\n      <svg>\r\n        <mask id={uid[0]} fill='#fff'>\r\n          <rect id={uid[1]} width='100%' height='100%' />\r\n          <circle id={uid[2]} r={radius}  cy='100%' fill='#000'  />\r\n          <use href={uid[3]} x='100%'/>\r\n        </mask>\r\n        <use href={uid[4]} mask={`url(${uid[5]})`} fill={primaryColor} />\r\n\r\n\r\n        <mask id={uid[6]} fill='#fff'>\r\n          <rect className=\"borderStart\" id={uid[7]} />\r\n          <circle id={uid[8]} r={radius} cy='100%' fill='#000' />\r\n          <use href={uid[9]} x='100%'/>\r\n        </mask>\r\n        <use href={uid[10]} mask={`url(${uid[11]})`} fill={borderColor} />\r\n\r\n        <mask id={uid[12]} fill='#fff'>\r\n          <rect className=\"borderEnd\" id={uid[13]} />\r\n          <circle id={uid[14]} r={radius + 3} fill='#000' cy='100%' />\r\n          <use href={uid[15]} x='100%' />\r\n        </mask>\r\n        <use href={uid[16]} mask={`url(${uid[17]})`} fill={primaryColor} />\r\n        <rect className=\"imagePlaceholder\" y={radius} />\r\n      </svg>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <div className={clickEvent ? \"scoopedBoxClickable\" : \"scoopedBox\"} onClick={clickEvent} >\r\n      <div className={\"frameBox\"}>\r\n        {renderBox()}\r\n        {renderTop()}\r\n        {renderBottom()}\r\n        {children ? children : <p style={{color: textColor}}>{textContent}</p>}\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default ScoopedBoxFrame","import React, { useEffect, useState } from 'react'\r\nimport ReactTags from 'react-tag-autocomplete'\r\nimport { Link } from 'react-router-dom'\r\nimport tagService from '../services/tags'\r\nimport ImageLoader from './ImageLoader'\r\nimport ScoopedBoxFrame from './ScoopedBoxFrame'\r\n\r\nimport '../styles/Profiles.css'\r\n\r\n\r\nconst Profiles = ({ profiles, filters }) => {\r\n\r\n  if(!profiles) return null\r\n\r\n  const [tags, setTags] = useState([])\r\n  const [suggestions, setSuggestions] = useState([])\r\n\r\n  useEffect(() => {\r\n    getSuggestionsFromServer()\r\n  },[])\r\n\r\n  const getSuggestionsFromServer = async () => {\r\n    let suggestionList = await tagService.getAll()\r\n    suggestionList = suggestionList.map((s, index) => { return { id: index, name: s }})\r\n    setSuggestions(suggestionList)\r\n\r\n    let f = []\r\n    if (filters) filters.forEach( (filter, index) => {\r\n      f.push({ id: index, name: filter })\r\n    })\r\n    setTags(f)\r\n  }\r\n\r\n  const handleDelete = (i) => {\r\n    const newTags = tags.slice(0)\r\n    newTags.splice(i, 1)\r\n    setTags(newTags)\r\n  }\r\n\r\n  const handleAddition = (tag) => {\r\n    const newTags = [].concat(tags, tag)\r\n    setTags(newTags)\r\n  }\r\n\r\n  const filteredProfiles = () => {\r\n    const scores = profiles.map(p => [{ profile: p }, { score: p.likes.length }])\r\n    if (tags.length > 0) {\r\n      scores.forEach(s => {\r\n        tags.forEach(tag => {\r\n          if (\r\n            tag.name === s[0].profile.city ||\r\n            tag.name === s[0].profile.country ||\r\n            tag.name === s[0].profile.username ||\r\n            tag.name === s[0].profile.name ||\r\n            s[0].profile.tags.indexOf(tag.name) >= 0\r\n          ) s[1].score += 10000\r\n        })\r\n      })\r\n    }\r\n    return scores\r\n      .sort((a, b) => b[1].score - a[1].score)\r\n      .map(obj => obj[0].profile)\r\n  }\r\n\r\n  const mapping = () => {\r\n    return (\r\n      filteredProfiles().map(profile =>\r\n        <div key={profile.id} className=\"profile-element\">\r\n          <ScoopedBoxFrame \r\n            id={profile.id + \"top\"}\r\n            radius={20}\r\n            borderColor=\"#f0f0db\"\r\n            primaryColor=\"#425346\"\r\n            type=\"top\"\r\n            children = {\r\n              <div className=\"bottom-border\" />\r\n            }\r\n          />\r\n          {profile.images &&\r\n            <ImageLoader\r\n              imgUrl={profile.images[0]}\r\n              child={\r\n                <div className=\"profile-name\">\r\n                  < Link to={`/profile/${profile.username}`}>{profile.name}</Link>\r\n                  <div className=\"profile-city\">\r\n                    {profile.city}, {profile.country}\r\n                  </div>\r\n                </div>\r\n              }\r\n            />\r\n          }\r\n          <ScoopedBoxFrame \r\n            id={profile.id  + \"bottom\"}\r\n            radius={20}\r\n            borderColor=\"#f0f0db\"\r\n            primaryColor=\"#425346\"\r\n            type=\"bottom\"\r\n            children = {\r\n              <div className=\"bottom-border\" />\r\n            }\r\n          />\r\n        </div>\r\n      )\r\n    )\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <ReactTags\r\n        tags={tags}\r\n        suggestions={suggestions}\r\n        handleDelete={handleDelete.bind(this)}\r\n        handleAddition={handleAddition.bind(this)}\r\n        autofocus={false}\r\n        placeholder={'Search'}\r\n      />\r\n      <div>{mapping()}</div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Profiles","const initialState = ''\r\n\r\nconst userReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n  case 'SET_USER':\r\n    return action.user\r\n  case 'CLEAR_USER':\r\n    return initialState\r\n  default:\r\n    return state\r\n  }\r\n}\r\n\r\nexport const userChange = user => {\r\n  if(!user) {\r\n    return {\r\n      type: 'CLEAR_USER'\r\n    }\r\n  }\r\n\r\n  return {\r\n    type: 'SET_USER',\r\n    user: user,\r\n  }\r\n}\r\n\r\nexport default userReducer","\r\nconst initialState = false\r\n\r\nconst loginReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n  case 'SET_SHOWLOGIN':\r\n    return action.showLogin\r\n  case 'HIDE':\r\n    return false\r\n  default:\r\n    return state\r\n  }\r\n}\r\n\r\nexport const hideLogin = () => {\r\n  return {\r\n    type: 'HIDE',\r\n  }\r\n}\r\n\r\nexport const setShowLogin = value => {\r\n  return {\r\n    type: 'SET_SHOWLOGIN',\r\n    showLogin: value,\r\n  }\r\n}\r\n\r\nexport default loginReducer","import axios from 'axios'\r\nconst baseUrl = '/api/profiles'\r\n\r\nlet token = null\r\n\r\nconst setToken = newToken => {\r\n  token = `bearer ${newToken}`\r\n}\r\n\r\nconst getAll = async () => {\r\n  const response = await axios.get(baseUrl)\r\n  return response.data\r\n}\r\n\r\nconst getOne = async id => {\r\n  const response = await axios.get(`${baseUrl}/${id}`)\r\n  return response.data\r\n}\r\n\r\nconst update = async newObject => {\r\n  const config = {\r\n    headers: { Authorization: token },\r\n  }\r\n  const response = await axios.put(`${baseUrl}/${newObject.id}`, newObject, config)\r\n  return response.data\r\n}\r\n\r\nconst like = async newObject => {\r\n  const config = {\r\n    headers: { Authorization: token },\r\n  }\r\n  const response = await axios.put(`${baseUrl}/like/${newObject.id}`, newObject, config)\r\n  return response.data\r\n}\r\n\r\nconst create = async newObject => {\r\n  const response = await axios.post(baseUrl, newObject)\r\n  return response.data\r\n}\r\n\r\nexport default { getAll, getOne, update, like, create, setToken }","import React, { useState, useEffect } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { Link } from 'react-router-dom'\r\nimport { useLastLocation } from 'react-router-last-location'\r\nimport { Button, Carousel } from 'react-bootstrap'\r\n\r\nimport { userChange } from '../reducers/userReducer'\r\nimport { setShowLogin } from '../reducers/loginReducer'\r\n\r\nimport profileService from '../services/profiles'\r\n\r\nconst Profile = (props) => {\r\n  const { user } = props\r\n  let profile = props.profile\r\n\r\n  if (!profile) return null\r\n\r\n  const [userLikedProfile, setUserLikedProfile] = useState(false)\r\n  const [likes, setLikes] = useState(profile.likes.length)\r\n\r\n  useEffect(() => {\r\n    fetchProfile(profile.id)\r\n  },[profile.id])\r\n\r\n  const fetchProfile = async (id) => {\r\n    profile = await profileService.getOne(id)\r\n    setLikes(profile.likes.length)\r\n    setUserLikedProfile(user && profile.likes.includes(user.username))\r\n    window.scrollTo(0, 0)\r\n  }\r\n\r\n  const mapProfileImages = () => {\r\n    const divStyle = {\r\n      minHeight: '200px',\r\n    }\r\n\r\n    return profile.images.map((image, index) =>\r\n      <Carousel.Item key={index} style={divStyle}>\r\n        <img\r\n          src={image}\r\n          alt={`${profile.username} ${index}`}\r\n          width=\"100%\"\r\n          height=\"auto\"\r\n        />\r\n      </Carousel.Item>\r\n    )\r\n  }\r\n\r\n  const handleLikeButtonClick = async () => {\r\n    if (!user) {\r\n      props.setShowLogin(true)\r\n      return\r\n    }\r\n    profile = await profileService.like(profile)\r\n    setUserLikedProfile(!userLikedProfile)\r\n    setLikes(!userLikedProfile ? likes + 1 : likes - 1)\r\n  }\r\n\r\n  return (\r\n    <div key={profile.id}>\r\n      {profile.images &&\r\n        <Carousel interval={null}>\r\n          {mapProfileImages()}\r\n        </Carousel>\r\n      }\r\n      <div className=\"profile-info-container\">\r\n        <div className=\"flex-grid\">\r\n          <div className=\"col-button\">\r\n            <Button\r\n              className={`round-button ${(userLikedProfile ? 'liked' : 'not-liked')}`}\r\n              variant=\"outline-success\"\r\n              onClick={() => handleLikeButtonClick()}>\r\n              <i className=\"fas fa-thumbs-up\"></i>\r\n            </Button>\r\n          </div>\r\n          <div className=\"col\">\r\n            <div className=\"single-profile-name\">\r\n              {profile.name}\r\n            </div>\r\n            <div className=\"profile-city\">\r\n              {profile.city}, {profile.country}\r\n            </div>\r\n          </div>\r\n          <div className=\"col-button\">\r\n            <Button className=\"round-button\" variant=\"outline-danger\">\r\n              <i className=\"fas fa-heart\"></i>\r\n            </Button>\r\n          </div>\r\n        </div>\r\n        <div className=\"profile-info\">\r\n          <p>Likes: {likes}</p>\r\n          <p>{profile.description}</p>\r\n          <p>{profile.name}, {profile.username}</p>\r\n          <p>{profile.address}, {profile.postalCode}, {profile.city}, {profile.country}</p>\r\n          <p>{profile.tags}</p>\r\n        </div>\r\n      </div>\r\n      <Link to={useLastLocation() ? useLastLocation() : '/'}>\r\n        <div className=\"back-button\">\r\n          <i className=\"fas fa-arrow-left\"></i>\r\n        </div>\r\n      </Link>\r\n    </div>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    user: state.user\r\n  }\r\n}\r\n\r\nconst ConnectedProfile = connect(mapStateToProps, {\r\n  userChange,\r\n  setShowLogin\r\n})(Profile)\r\n\r\nexport default ConnectedProfile","import React from 'react'\r\nimport ImageLoader from './ImageLoader'\r\nimport { Link } from 'react-router-dom'\r\nimport Collapsible from 'react-collapsible'\r\nimport ScoopedBoxFrame from './ScoopedBoxFrame'\r\n\r\nimport '../styles/News.css'\r\n\r\n\r\n\r\nconst News = ({ news }) => {\r\n\r\n  if(!news) return null\r\n\r\n  const mapping = () => {\r\n    return (\r\n      news.map(newsElem =>\r\n        <div key={newsElem.id} className=\"news-element\">\r\n          <ScoopedBoxFrame \r\n            id={newsElem.id + \"top\"}\r\n            radius={20}\r\n            borderColor=\"#f0f0db\"\r\n            primaryColor=\"#425346\"\r\n            type=\"top\"\r\n            children = {\r\n              <div className=\"bottom-border\" />\r\n            }\r\n          />\r\n          <div className=\"news-container\">\r\n            <div>\r\n              {newsElem.image &&\r\n                <ImageLoader\r\n                  imgUrl={newsElem.image}\r\n                  altText={newsElem.title}\r\n                  child={\r\n                    <div className=\"news-title\">\r\n                      <Link onClick={() => window.scrollTo(0, 0)} to={newsElem.link ? newsElem.link : '/'}>{newsElem.title}</Link>\r\n                    </div>\r\n                  }\r\n                />\r\n              }\r\n            </div>\r\n            <Collapsible trigger=' read more' overflowWhenOpen='visible'>\r\n              <p>{newsElem.description}</p>\r\n            </Collapsible>\r\n          </div>\r\n          <ScoopedBoxFrame \r\n            id={newsElem.id  + \"bottom\"}\r\n            radius={20}\r\n            borderColor=\"#f0f0db\"\r\n            primaryColor=\"#425346\"\r\n            type=\"bottom\"\r\n            children = {\r\n              <div className=\"bottom-border\" />\r\n            }\r\n          />\r\n        </div>\r\n      )\r\n    )\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <div>{mapping()}</div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default News","import React, { useEffect } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { Button } from 'react-bootstrap'\r\n\r\nimport profileService from '../services/profiles'\r\n\r\nimport { setNotification } from '../reducers/notificationReducer'\r\nimport { userChange } from '../reducers/userReducer'\r\nimport { setShowLogin } from '../reducers/loginReducer'\r\n\r\nimport '../styles/Authentication.css'\r\n\r\nconst Authentication = (props) => {\r\n  const { user } = props\r\n\r\n  useEffect(() => {\r\n    const loggedUserJSON = window.localStorage.getItem('loggedQuestspotUser')\r\n    if (loggedUserJSON) {\r\n      const user = JSON.parse(loggedUserJSON)\r\n      props.userChange(user)\r\n      profileService.setToken(user.token)\r\n    }\r\n  }, [])\r\n\r\n  const handleLogout = () => {\r\n    window.localStorage.removeItem('loggedQuestspotUser')\r\n    props.userChange('')\r\n    props.setNotification('Logged out')\r\n    profileService.setToken('')\r\n  }\r\n\r\n  const loginInformation = () => {\r\n    if (!user) {\r\n      return  null\r\n    }\r\n    return (\r\n      <p>\r\n        <Button variant=\"link\" onClick={() => handleLogout()}>log out</Button>\r\n      </p>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <div className=\"authentication-container\">\r\n      {loginInformation()}\r\n    </div>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    user: state.user\r\n  }\r\n}\r\n\r\nconst ConnectedAuthentication = connect(mapStateToProps, {\r\n  setNotification,\r\n  userChange,\r\n  setShowLogin\r\n})(Authentication)\r\n\r\nexport default ConnectedAuthentication\r\n","import React , { useState }  from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { slide as Menu } from 'react-burger-menu'\r\nimport { Link, withRouter } from 'react-router-dom'\r\nimport Headroom from 'react-headroom'\r\nimport Authentication from './Authentication'\r\nimport { Button } from 'react-bootstrap'\r\n\r\nimport { setNotification } from '../reducers/notificationReducer'\r\nimport { userChange } from '../reducers/userReducer'\r\nimport { setShowLogin } from '../reducers/loginReducer'\r\n\r\nimport logo from '../resources/logo.png'\r\nimport '../styles/Sidebar.css'\r\n\r\nconst Sidebar = (props) => {\r\n  const { user } = props\r\n  const [isMenuOpen, setIsMenuOpen] = useState(false)\r\n\r\n  const handleStateChange = (state) => {\r\n    setIsMenuOpen(state.isOpen)\r\n  }\r\n  \r\n  // This can be used to close the menu, e.g. when a user clicks a menu item\r\n  const closeMenu = () => {\r\n    setIsMenuOpen(false)\r\n    window.scrollTo(0, 0)\r\n  }\r\n\r\n  const showLogIn = () => {\r\n    closeMenu()\r\n    props.setShowLogin(true)\r\n  }\r\n\r\n  //props.setShowLogin(true)\r\n\r\n  const renderUsername = () => {\r\n    if (user) {\r\n      return (\r\n        <Link className=\"menu-item\" onClick={() => closeMenu()} to={`/profiles/${user.name}`}>\r\n          {user.name}\r\n        </Link>\r\n      )\r\n    }\r\n    return (          \r\n      <p>\r\n        <Button variant=\"link\" onClick={() => showLogIn()}>Log in</Button>\r\n      </p>\r\n    )\r\n  }\r\n  return (\r\n\r\n    <div className=\"menu-background\">\r\n      <Menu isOpen={ isMenuOpen } onStateChange={(state) => handleStateChange(state)}>\r\n        {renderUsername()}\r\n        <Authentication />\r\n        <Link className=\"menu-item\" onClick={() => closeMenu()} to=\"/\">\r\n            Home\r\n        </Link>\r\n        <Link className=\"menu-item\" onClick={() => closeMenu()} to=\"/profiles/\">\r\n            Search\r\n        </Link>\r\n      </Menu>\r\n      <Headroom>\r\n        <div className=\"top-container\">\r\n          <img src={logo} className=\"app-logo\" alt=\"QuestSpot\" />\r\n        </div>\r\n        <div className=\"shortcuts\">\r\n          <Link className={`shortcut-item ${props.location.pathname === '/' ? 'selected' : 'not-selected'}`} to=\"/\">\r\n            <i className=\"far fa-newspaper\"></i>\r\n          </Link>\r\n\r\n          <Link className={`shortcut-item ${props.location.pathname === '/profiles/' ? 'selected' : 'not-selected'}`} to=\"/profiles/\">\r\n            <i className=\"fas fa-search\"></i>\r\n          </Link>\r\n        </div>\r\n      </Headroom>\r\n    </div>\r\n\r\n  )\r\n}\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    notification: state.notification,\r\n    user: state.user\r\n  }\r\n}\r\n\r\nconst ConnectedAuthentication = connect(mapStateToProps, {\r\n  setNotification,\r\n  userChange,\r\n  setShowLogin\r\n})(Sidebar)\r\n\r\nexport default withRouter(ConnectedAuthentication)","import axios from 'axios'\r\nconst baseUrl = '/api/login'\r\n\r\nconst login = async credentials => {\r\n  const response = await axios.post(baseUrl, credentials)\r\n  return response.data\r\n}\r\n\r\nexport default { login }","import React, { useState } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { Form, Button } from 'react-bootstrap'\r\nimport { withRouter } from 'react-router-dom'\r\n\r\nimport loginService from '../services/login'\r\nimport profileService from '../services/profiles'\r\n\r\nimport { setShowLogin } from '../reducers/loginReducer'\r\nimport { setNotification } from '../reducers/notificationReducer'\r\nimport { userChange } from '../reducers/userReducer'\r\n\r\nimport ScoopedBoxFrame from './ScoopedBoxFrame'\r\n\r\nimport '../styles/LoginForm.css'\r\nimport '../styles/ScoopedFrame.css'\r\n\r\n\r\nconst LoginForm = (props) => {\r\n\r\n  if (!props.showLogin) return null\r\n\r\n  const [username, setUsername] = useState('')\r\n  const [password, setPassword] = useState('')\r\n\r\n  const handleLogin = async (event) => {\r\n    event.preventDefault()\r\n    try {\r\n      const user = await loginService.login({\r\n        username: username, password: password\r\n      })\r\n      console.log('user', user)\r\n      window.localStorage.setItem(\r\n        'loggedQuestspotUser', JSON.stringify(user)\r\n      )\r\n\r\n      props.userChange(user)\r\n      profileService.setToken(user.token)\r\n      setUsername('')\r\n      setPassword('')\r\n      props.setNotification(`Welcome ${user.name}!`)\r\n      props.setShowLogin(false)\r\n\r\n    } catch (exception) {\r\n      props.setNotification('Invalid username or password')\r\n    }\r\n  }\r\n\r\n  const cancelLogin = () => {\r\n    props.setShowLogin(false)\r\n  }\r\n\r\n  const redirectToRegisteration = () => {\r\n    cancelLogin()\r\n    props.history.push('/registration')\r\n  }\r\n\r\n  return (\r\n    <div className=\"login-form\">\r\n      <div className=\"login-container\">\r\n        <ScoopedBoxFrame\r\n        id=\"Background\"\r\n        radius={20}\r\n        children = {\r\n          <div className=\"login-fields\">\r\n            <Form onSubmit={handleLogin} className=\"overlay-content\">\r\n              <Form.Group>\r\n                <Form.Label>Username</Form.Label>\r\n                <Form.Control\r\n                  type=\"text\"\r\n                  placeholder=\"username\"\r\n                  onChange={(event) => setUsername(event.target.value)}\r\n                />\r\n                <Form.Label>Password</Form.Label>\r\n                <Form.Control\r\n                  type=\"password\"\r\n                  placeholder=\"Password\"\r\n                  onChange={(event) => setPassword(event.target.value)}\r\n                />\r\n              </Form.Group>\r\n            </Form>\r\n            <div className=\"login-form-button-container\">\r\n              <ScoopedBoxFrame \r\n                id='submit' \r\n                textContent='Log in' \r\n                radius={20}\r\n                primaryColor=\"#436151\"\r\n                clickEvent={handleLogin}\r\n                type=\"box\"\r\n              />\r\n              <ScoopedBoxFrame\r\n                id='signup'\r\n                textContent='Sign up'\r\n                radius={20}\r\n                primaryColor=\"#f37863\"\r\n                clickEvent={redirectToRegisteration} />\r\n            </div>\r\n            <Button variant=\"link\" onClick={cancelLogin}>Cancel</Button>\r\n          </div>\r\n        }\r\n        />\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    showLogin: state.showLogin,\r\n  }\r\n}\r\n\r\n\r\n\r\nconst ConnectedLoginForm = connect(mapStateToProps,\r\n  {\r\n    setShowLogin,\r\n    setNotification,\r\n    userChange\r\n  }\r\n)(LoginForm)\r\n\r\nexport default withRouter(ConnectedLoginForm)","import React from 'react'\r\nimport ScoopedBoxFrame from './ScoopedBoxFrame'\r\n\r\nimport { FilePond, registerPlugin  } from 'react-filepond'\r\nimport FilePondPluginImagePreview from 'filepond-plugin-image-preview'\r\nimport FilePondPluginFileValidateType from 'filepond-plugin-file-validate-type'\r\nimport FilePondPluginImageCrop from 'filepond-plugin-image-crop'\r\nimport FilePondPluginImageResize from 'filepond-plugin-image-resize'\r\n\r\nimport '../styles/ImageUpload.css'\r\nimport 'filepond/dist/filepond.min.css'\r\nimport 'filepond-plugin-image-preview/dist/filepond-plugin-image-preview.min.css'\r\n\r\nregisterPlugin(FilePondPluginImagePreview)\r\nregisterPlugin(FilePondPluginFileValidateType)\r\nregisterPlugin(FilePondPluginImageCrop)\r\nregisterPlugin(FilePondPluginImageResize)\r\n\r\nconst ImageUpload = (props) => {\r\n\r\n  let pond\r\n\r\n  const handleSubmit = async () => {\r\n    const files = await pond.processFiles()\r\n    props.addPictures(files.map(file => file.serverId))\r\n  }\r\n\r\n\r\n  return (\r\n    <div className=\"img-uploader\">\r\n        <FilePond \r\n            ref={ref => pond = ref}\r\n            allowMultiple={true}\r\n            acceptedFileTypes={['image/jpeg']}\r\n            allowImageCrop={true}\r\n            imageCropAspectRatio={'1:1'}\r\n            allowImageResize={true}\r\n            imageResizeTargetWidth={1080}\r\n            imageResizeTargetHeight={1080}\r\n            imageResizeUpscale={false}\r\n            instantUpload = {false}\r\n            labelIdle = '<span class=\"filepond--label-action\"> Select images </span>'\r\n            server = \"/api/images\" \r\n        />\r\n        <ScoopedBoxFrame \r\n            id='submit' \r\n            radius={20}\r\n            primaryColor=\"#436151\"\r\n            clickEvent={handleSubmit}\r\n            type=\"box\"\r\n            children = {\r\n              <div className=\"button-label\">\r\n               <p>Next</p> \r\n              </div>\r\n            }\r\n          />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default ImageUpload","import React from 'react'\r\nimport { Image } from 'react-bootstrap'\r\nimport ScoopedBoxFrame from './ScoopedBoxFrame'\r\n\r\nimport artistBG from '../resources/artist_bg.jpg'\r\nimport studioBG from '../resources/studio_bg.jpg'\r\n\r\nconst TypeForm = (props) => {\r\n    if (props.state !== 'Type') return null\r\n\r\n    return (\r\n    <div className=\"type-button-container\">\r\n        <div className='type-button' onClick={() => props.setType('Artist')}>\r\n            <Image src={artistBG} className=\"type-button-image\" alt=\"Artist\" fluid/>\r\n            <p className=\"artist\">Artist</p>\r\n            <div className=\"type-button-overlay\" />\r\n        </div>\r\n        <div className='type-button' onClick={() => props.setType('Studio')}>\r\n            <Image src={studioBG} className=\"type-button-image\" alt=\"Studio\" fluid/>\r\n            <p className=\"studio\">Studio</p>\r\n            <div className=\"type-button-overlay\" />\r\n        </div>\r\n        {props.type && <ScoopedBoxFrame \r\n            id='submit' \r\n            radius={20}\r\n            primaryColor=\"#436151\"\r\n            clickEvent={props.validateType}\r\n            type=\"box\"\r\n            children = {\r\n              <div className=\"button-label\">\r\n                <p>Next</p> \r\n              </div>\r\n            }\r\n            />}\r\n    </div>\r\n    )\r\n  }\r\n\r\n  export default TypeForm","import React from 'react'\r\nimport { FormControl } from 'react-bootstrap'\r\nimport ScoopedBoxFrame from './ScoopedBoxFrame'\r\n\r\n  const UserInfoForm = (props) => {\r\n    if ( props.state !== 'UserInfo') return null\r\n\r\n    return (\r\n      props.backgroundDiv(\r\n        <div className=\"input-form\">\r\n          <FormControl\r\n            className=\"registeration-input\"\r\n            type=\"text\"\r\n            placeholder=\"username\"\r\n            defaultValue={props.username ? props.username : ''}\r\n            onChange={(event) => props.setUsername(event.target.value)}\r\n          />\r\n          <FormControl\r\n            className=\"registeration-input\"\r\n            type=\"password\"\r\n            placeholder=\"Password\"\r\n            defaultValue={props.password ? props.password : ''}\r\n            onChange={(event) => props.setPassword(event.target.value)}\r\n          />\r\n          <FormControl\r\n            className=\"registeration-input\"\r\n            type=\"text\"\r\n            placeholder=\"Name\"\r\n            defaultValue={props.name ? props.name : ''}\r\n            onChange={(event) => props.setName(event.target.value)}\r\n          />\r\n          <FormControl\r\n            className=\"registeration-input\"\r\n            type=\"email\"\r\n            placeholder=\"Email\"\r\n            defaultValue={props.email ? props.email : ''}\r\n            onChange={(event) => props.setEmail(event.target.value)}\r\n          />\r\n          <ScoopedBoxFrame \r\n            id='next' \r\n            radius={20}\r\n            primaryColor=\"#436151\"\r\n            clickEvent={props.validateUserInfo}\r\n            type=\"box\"\r\n            children = {\r\n              <div className=\"button-label\">\r\n               <p>Next</p> \r\n              </div>\r\n            }/>\r\n          <ScoopedBoxFrame \r\n            id='back' \r\n            radius={20}\r\n            primaryColor=\"#f37863\"\r\n            clickEvent={props.setPrevState}\r\n            type=\"box\"\r\n            children = {\r\n              <div className=\"button-label\">\r\n               <p>Back</p> \r\n              </div>\r\n            }/>\r\n        </div>\r\n      )\r\n    )\r\n  }\r\n\r\n  export default UserInfoForm","\r\nimport React from 'react'\r\nimport { FormControl } from 'react-bootstrap'\r\nimport ScoopedBoxFrame from './ScoopedBoxFrame'\r\n\r\n  const locationForm = (props) => {\r\n    if (props.state !== 'Location') return null\r\n\r\n    return (\r\n      props.backgroundDiv(\r\n        <div className=\"input-form\">\r\n          <FormControl\r\n            className=\"registeration-input\"\r\n            type=\"text\"\r\n            placeholder=\"Address\"\r\n            defaultValue={props.address ? props.address : ''}\r\n            onChange={(event) => props.setAddress(event.target.value)}\r\n          />\r\n          <FormControl\r\n            className=\"registeration-input\"\r\n            type=\"text\"\r\n            placeholder=\"Postal Code\"\r\n            defaultValue={props.postalcode ? props.postalcode : ''}\r\n            onChange={(event) => props.setPostalcode(event.target.value)}\r\n          />\r\n          <FormControl\r\n            className=\"registeration-input\"\r\n            type=\"text\"\r\n            placeholder=\"City\"\r\n            defaultValue={props.city ? props.city : ''}\r\n            onChange={(event) => props.setCity(event.target.value)}\r\n          />\r\n          <FormControl\r\n            className=\"registeration-input\"\r\n            type=\"text\"\r\n            placeholder=\"Country\"\r\n            defaultValue={props.country ? props.country : ''}\r\n            onChange={(event) => props.setCountry(event.target.value)}\r\n          />\r\n          <ScoopedBoxFrame \r\n            id='next' \r\n            radius={20}\r\n            primaryColor=\"#436151\"\r\n            clickEvent={props.validateLocation}\r\n            type=\"box\"\r\n            children = {\r\n              <div className=\"button-label\">\r\n               <p>Next</p> \r\n              </div>\r\n            }/>\r\n          <ScoopedBoxFrame \r\n            id='back' \r\n            radius={20}\r\n            primaryColor=\"#f37863\"\r\n            clickEvent={props.setPrevState}\r\n            type=\"box\"\r\n            children = {\r\n              <div className=\"button-label\">\r\n               <p>Back</p> \r\n              </div>\r\n            }/>\r\n        </div>\r\n      )\r\n    )\r\n  }\r\n\r\n  export default locationForm","\r\nimport React from 'react'\r\nimport { Form } from 'react-bootstrap'\r\nimport ReactTags from 'react-tag-autocomplete'\r\nimport ScoopedBoxFrame from './ScoopedBoxFrame'\r\n\r\n  const profileInfoForm = (props) => {\r\n    if (props.state !== 'ProfileInfo') return null\r\n\r\n    return (\r\n      props.backgroundDiv(\r\n        <div className=\"input-form\">\r\n          <ReactTags\r\n            tags={props.tags}\r\n            suggestions={props.suggestions}\r\n            handleDelete={props.handleDelete}\r\n            handleAddition={props.handleAddition}\r\n            autofocus={false}\r\n            placeholder={'Add tag'}\r\n            addOnBlur={true}\r\n            allowNew={true}\r\n          />\r\n          <Form onSubmit={props.addProfile}>\r\n            <Form.Group>\r\n              <Form.Control\r\n                as=\"textarea\"\r\n                rows=\"3\"\r\n                placeholder=\"Description\"\r\n                defaultValue={props.description ? props.description : ''}\r\n                onChange={(event) => props.setDescription(event.target.value)}\r\n              />\r\n\r\n            <ScoopedBoxFrame \r\n              id='next' \r\n              radius={20}\r\n              primaryColor=\"#436151\"\r\n              clickEvent={props.addProfile}\r\n              type=\"box\"\r\n              children = {\r\n                <div className=\"button-label\">\r\n                <p>Next</p> \r\n                </div>\r\n            }/>\r\n            <ScoopedBoxFrame \r\n              id='back' \r\n              radius={20}\r\n              primaryColor=\"#f37863\"\r\n              clickEvent={props.setPrevState}\r\n              type=\"box\"\r\n              children = {\r\n                <div className=\"button-label\">\r\n                <p>Back</p> \r\n                </div>\r\n              }/>\r\n            </Form.Group>\r\n          </Form>\r\n        </div>\r\n      )\r\n    )\r\n  }\r\n\r\n  export default profileInfoForm","import React, { useState, useEffect } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { Redirect } from 'react-router-dom'\r\nimport { useLastLocation } from 'react-router-last-location'\r\n\r\nimport ImageUpload from './ImageUpload'\r\nimport UserTypeForm from './UserTypeForm'\r\nimport UserInfoForm from './UserInfoForm'\r\nimport UserLocationFrom from './UserLocationForm'\r\nimport UserProfileInfoForm from './UserProfileInfoForm'\r\n\r\nimport tagService from '../services/tags'\r\nimport profileService from '../services/profiles'\r\nimport loginService from '../services/login'\r\n\r\nimport { setNotification } from '../reducers/notificationReducer'\r\nimport { userChange } from '../reducers/userReducer'\r\n\r\nimport formBG from '../resources/form_bg.jpg'\r\nimport '../styles/RegisterationForm.css'\r\n\r\nconst RegisterationForm = (props) => {\r\n\r\n  const [state, setState]  = useState(0)\r\n  const states = ['Type', 'UserInfo', 'Location',  'ImageUpload', 'ProfileInfo']\r\n  const [type, setType]  = useState('')\r\n\r\n  const [username, setUsername]  = useState('')\r\n  const [password, setPassword]  = useState('')\r\n  const [name, setName]  = useState('')\r\n  const [email, setEmail]  = useState('')\r\n\r\n  const [address, setAddress]  = useState('')\r\n  const [postalcode, setPostalcode]  = useState('')\r\n  const [city, setCity]  = useState('')\r\n  const [country, setCountry]  = useState('')\r\n\r\n  const [ pictures, setPictures ] = useState([])\r\n\r\n  const [description, setDescription]  = useState('')\r\n  const [tags, setTags]  = useState([])\r\n  const [suggestions, setSuggestions] = useState([])\r\n\r\n  const previousUrl = useLastLocation() ? useLastLocation() : '/'\r\n  const [registerationDone, setRegisterationDone] = useState(false)\r\n\r\n  useEffect(() => {\r\n    getSuggestionsFromServer()\r\n  },[])\r\n\r\n  const getSuggestionsFromServer = async () => {\r\n    let suggestionList = await tagService.getAll()\r\n    suggestionList = suggestionList.map((s, index) => { return { id: index, name: s }})\r\n    setSuggestions(suggestionList)\r\n  }\r\n\r\n  const handleDelete = (i) => {\r\n    const newTags = tags.slice(0)\r\n    newTags.splice(i, 1)\r\n    setTags(newTags)\r\n  }\r\n\r\n  const handleAddition = (input) => {\r\n    var t = []\r\n    input.name\r\n      .split(' ')\r\n      .map((s, index) => { return { id: index, name: s }})\r\n      .forEach(tag => {\r\n        t.push(tag)\r\n      })\r\n    t = t.concat(tags)\r\n    setTags(t)\r\n  }\r\n\r\n  const clampState = (val) => {\r\n    if (val < 0) return 0\r\n    return val >= states.length ? states.length : val\r\n  }\r\n\r\n  const setNextState = () =>\r\n    setState(clampState(state + 1))\r\n\r\n\r\n  const setPrevState = () => {\r\n    setState(clampState(state - 1))\r\n  }\r\n\r\n  const addProfile = async (event) => {\r\n    event.preventDefault()\r\n    const tagList = tags.map(tag => tag.name)\r\n    const profileObject = {\r\n      type: type,\r\n      username: username,\r\n      password: password,\r\n      name: name,\r\n      email: email,\r\n      address: address,\r\n      postalCode: postalcode,\r\n      city: city,\r\n      country: country,\r\n      description: description,\r\n      tags: tagList,\r\n      images: pictures\r\n    }\r\n    try {\r\n      const newProfile = await profileService.create(profileObject)\r\n      props.setNotification(`a new profile ${newProfile.username} added`)\r\n\r\n      //Move this to extacted login!\r\n      const user = await loginService.login({\r\n        username:username, password:password\r\n      })\r\n      window.localStorage.setItem(\r\n        'loggedQuestspotUser', JSON.stringify(user)\r\n      )\r\n\r\n      props.userChange(user)\r\n      profileService.setToken(user.token)\r\n      setRegisterationDone(true)\r\n\r\n    } catch (exception) {\r\n      props.setNotification('User creation failed. Try again later')\r\n    }\r\n  }\r\n\r\n  const validateType = () => {\r\n    if (type)\r\n      setNextState()\r\n    else  props.setNotification('Please select profile type')\r\n  }\r\n\r\n  const validateUserInfo = () => {\r\n    //Add better validation here (Check username is available, email is in right format etc)\r\n    if (username && password && name && email)\r\n      setNextState()\r\n    else  props.setNotification('Please fill all required fields')\r\n  }\r\n\r\n  const validateLocation = () => {\r\n    //Add better validation here\r\n    if (address && postalcode && city && country)\r\n      setNextState()\r\n    else  props.setNotification('Please fill all required fields')\r\n  }\r\n\r\n  const backgroundDiv = (child) => {\r\n    return (\r\n      <div className=\"bg-image-container\">\r\n        <div className=\"bg-image \" style={ { backgroundImage: `url(${formBG})`,\r\n          backgroundPosition: 'center',\r\n          backgroundSize: 'cover',\r\n          backgroundRepeat: 'no-repeat', }}>\r\n          <div className=\"bg-image-overlay\"/>\r\n        </div>\r\n        {child}\r\n      </div>\r\n    )\r\n  }\r\n\r\n  const addPictures = (newPictures) => {\r\n    if(newPictures.length === 0) {\r\n      props.setNotification('Please add images')\r\n      return\r\n    }\r\n    setPictures(newPictures)\r\n    setNextState()\r\n  }\r\n\r\n  const imageUpload = () => {\r\n    if (states[state] !== 'ImageUpload') return null\r\n    return (\r\n      <ImageUpload addPictures = {addPictures} />\r\n    )\r\n  }\r\n\r\n\r\n\r\n  return (\r\n    <div className=\"registeration-form\">\r\n      <UserTypeForm \r\n        setType = {setType}\r\n        state = {states[state]}\r\n        type = {type}\r\n        validateType = {validateType}\r\n      />\r\n      <UserInfoForm\r\n        state = {states[state]}\r\n        username = {username}\r\n        setUsername = {setUsername}\r\n        password = {password}\r\n        setPassword = {setPassword}\r\n        name = {name}\r\n        setName = {setName}\r\n        email = {email}\r\n        setEmail = {setEmail}\r\n        validateUserInfo = {validateUserInfo}\r\n        setPrevState = {setPrevState}\r\n        backgroundDiv = {backgroundDiv}\r\n      />\r\n\r\n      <UserLocationFrom\r\n        state = {states[state]}\r\n        address = {address}\r\n        setAddress = {setAddress}\r\n        postalCode = {postalcode}\r\n        setPostalcode = {setPostalcode}\r\n        city = {city}\r\n        setCity = {setCity}\r\n        country = {country}\r\n        setCountry = {setCountry}\r\n        validateLocation = {validateLocation}\r\n        setPrevState = {setPrevState}\r\n        backgroundDiv = {backgroundDiv}\r\n      />\r\n\r\n      {imageUpload()}\r\n      \r\n      <UserProfileInfoForm\r\n        state = {states[state]}\r\n        tags = {tags}\r\n        suggestions = {suggestions}\r\n        handleDelete = {handleDelete}\r\n        handleAddition = {handleAddition}\r\n        addProfile = {addProfile}\r\n        description = {description}\r\n        setDescription = {setDescription}\r\n        setPrevState = {setPrevState}\r\n        backgroundDiv = {backgroundDiv}\r\n      />\r\n      {registerationDone &&  <Redirect to={previousUrl}/>}\r\n    </div>\r\n  )\r\n}\r\n\r\nconst ConnectedRegisterationForm = connect(\r\n  null, {\r\n    setNotification,\r\n    userChange\r\n  }\r\n)(RegisterationForm)\r\n\r\nexport default ConnectedRegisterationForm","import profileService from '../services/profiles'\r\n\r\nexport const initializeProfiles = () => {\r\n  return async dispatch => {\r\n    const profiles = await profileService.getAll()\r\n    dispatch({\r\n      type: 'INIT_PROFILES',\r\n      data: profiles,\r\n    })\r\n  }\r\n}\r\n\r\nconst profilesReducer = (state = [], action) => {\r\n  switch (action.type) {\r\n  case 'INIT_PROFILES':\r\n    return action.data\r\n  case 'RESET':\r\n    return []\r\n  default: return state\r\n  }\r\n}\r\n\r\nexport default profilesReducer","import axios from 'axios'\r\nconst baseUrl = '/api/news'\r\n\r\nconst getAll = async () => {\r\n  const response = await axios.get(baseUrl)\r\n  return response.data\r\n}\r\n\r\nexport default { getAll }","import newsService from '../services/news'\r\n\r\nexport const initializeNews = () => {\r\n  return async dispatch => {\r\n    const news = await newsService.getAll()\r\n    dispatch({\r\n      type: 'INIT_NEWS',\r\n      data: news,\r\n    })\r\n  }\r\n}\r\n\r\nconst newsReducer = (state = [], action) => {\r\n  switch (action.type) {\r\n  case 'INIT_NEWS':\r\n    return action.data\r\n  case 'RESET':\r\n    return []\r\n  default: return state\r\n  }\r\n}\r\n\r\nexport default newsReducer","import React, { useEffect } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport {\r\n  BrowserRouter as Router,\r\n  Route\r\n} from 'react-router-dom'\r\nimport { LastLocationProvider } from 'react-router-last-location'\r\n\r\nimport Notification from './components/Notification'\r\nimport Profiles from './components/Profiles'\r\nimport Profile from './components/Profile'\r\nimport News from './components/News'\r\nimport Sidebar from './components/Sidebar'\r\nimport LoginForm from './components/LoginForm'\r\nimport RegisterationForm from './components/RegisterationForm'\r\n\r\nimport { setNotification } from './reducers/notificationReducer'\r\nimport { initializeProfiles } from './reducers/profilesReducer'\r\nimport { initializeNews } from './reducers/newsReducer'\r\n\r\nimport './styles/App.css'\r\n\r\nconst App = (props) => {\r\n  const { profiles, news } = props\r\n\r\n  useEffect(() => {\r\n    props.initializeProfiles()\r\n  },[])\r\n\r\n  useEffect(() => {\r\n    props.initializeNews()\r\n  },[])\r\n\r\n  const profileByUsername = (username) =>\r\n    profiles.find(prof => prof.username === username)\r\n\r\n  const splitFilters = (filters) =>\r\n    filters.split(';')\r\n\r\n  return (\r\n    <div id=\"App\">\r\n      <Router>\r\n        <div className=\"container\" id=\"container\">\r\n        <LoginForm/>\r\n          <Sidebar pageWrapId={'page-wrap'} outerContainerId={'App'} />\r\n          <div>\r\n            <LastLocationProvider>\r\n              <div id=\"page-wrap\">\r\n                <div className=\"top-notification\">\r\n                  <Notification/>\r\n                </div>\r\n                <div className=\"main-content\">\r\n                  <Route exact path=\"/\" render={() =>\r\n                    <News news={news} />} />\r\n                  <Route exact path=\"/profiles/\" render={() =>\r\n                    <Profiles profiles={profiles} />} />\r\n                  <Route exact path=\"/profiles/:filters\" render={({ match }) =>\r\n                    <Profiles profiles={profiles} filters={splitFilters(match.params.filters)} />} />\r\n                  <Route path=\"/profile/:username\" render={({ match }) =>\r\n                    <Profile profile={profileByUsername(match.params.username)} />} />\r\n                  <Route exact path=\"/registration/\" render={() =>\r\n                    <RegisterationForm />} />\r\n                </div>\r\n              </div>\r\n            </LastLocationProvider>\r\n          </div>\r\n        </div>\r\n      </Router>\r\n    </div>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    user: state.user,\r\n    profiles: state.profiles,\r\n    news: state.news\r\n  }\r\n}\r\n\r\nexport default connect(\r\n  mapStateToProps, {\r\n    setNotification,\r\n    initializeProfiles,\r\n    initializeNews\r\n  })(App)\r\n","import { createStore, combineReducers, applyMiddleware } from 'redux'\r\nimport thunk from 'redux-thunk'\r\nimport { composeWithDevTools } from 'redux-devtools-extension'\r\n\r\nimport notificationReducer from './reducers/notificationReducer'\r\nimport profilesReducer from './reducers/profilesReducer'\r\nimport userReducer from './reducers/userReducer'\r\nimport loginReducer from './reducers/loginReducer'\r\nimport newsReducer from './reducers/newsReducer'\r\n\r\nconst reducer = combineReducers({\r\n  notification: notificationReducer,\r\n  profiles: profilesReducer,\r\n  user: userReducer,\r\n  showLogin: loginReducer,\r\n  news: newsReducer\r\n})\r\n\r\nconst store = createStore(\r\n  reducer,\r\n  composeWithDevTools(\r\n    applyMiddleware(thunk)\r\n  )\r\n)\r\n\r\nexport default store","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport App from './App'\r\nimport { Provider } from 'react-redux'\r\nimport store from './store'\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <App />\r\n  </Provider>,\r\n  document.getElementById('root'))","module.exports = __webpack_public_path__ + \"static/media/logo.fa63af19.png\";","module.exports = __webpack_public_path__ + \"static/media/artist_bg.019c3a5b.jpg\";","module.exports = __webpack_public_path__ + \"static/media/studio_bg.b7fd8371.jpg\";","module.exports = __webpack_public_path__ + \"static/media/form_bg.92dbda29.jpg\";"],"sourceRoot":""}